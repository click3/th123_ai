
#pragma once

#include <string.h>
#include "lib.h"


#define WINDOW_CLASS		g_ini.GetValue("WINDOW_CLASS")
#define WINDOW_TEXT		g_ini.GetValue("WINDOW_TEXT")
#define ADDR_PBATTLEMGR		addr[address::PBATTLEMGR]
#define ADDR_PNETOBJECT		addr[address::PNETOBJECT]
#define ADDR_COMMMODE		addr[address::COMMMODE]
#define ADDR_LCHARID		addr[address::LCHARID]
#define ADDR_RCHARID		addr[address::RCHARID]
#define ADDR_SCENEID		addr[address::SCENEID]
#define ADDR_LCHAROFS		addr[address::LCHAROFS]
#define ADDR_RCHAROFS		addr[address::RCHAROFS]
#define ADDR_BTLMODEOFS		addr[address::BTLMODEOFS]
#define ADDR_LPROFOFS		addr[address::LPROFOFS]
#define ADDR_RPROFOFS		addr[address::RPROFOFS]
#define ADDR_NETUDPOFS		addr[address::NETUDPOFS]
#define ADDR_ADRBEGOFS		addr[address::ADRBEGOFS]
#define ADDR_TOADDROFS		addr[address::TOADDROFS]
#define ADDR_WINCNTOFS		addr[address::WINCNTOFS]

#define ADDR_POINTXOFS		addr[address::POINTXOFS]
#define ADDR_POINTYOFS		addr[address::POINTYOFS]
#define ADDR_HPOFS		addr[address::HPOFS]
#define ADDR_TIMECOUNT		addr[address::TIMECOUNT]
#define ADDR_SPEEDXOFS		addr[address::SPEEDXOFS]
#define ADDR_SPEEDYOFS		addr[address::SPEEDYOFS]
#define ADDR_ACTIONIDOFS	addr[address::ACTIONIDOFS]
#define ADDR_FRAMECOUNTOFS	addr[address::FRAMECOUNTOFS]
#define ADDR_WEATHER		addr[address::WEATHER]
#define ADDR_DISPLAYWEATHER	addr[address::DISPLAYWEATHER]
#define ADDR_WEATHERCOUNTER	addr[address::WEATHERCOUNTER]
#define ADDR_ACTIVEFLAG		addr[address::ACTIVEFLAG]
#define ADDR_1PKEYMAP		addr[address::KEYMAP1P]
#define ADDR_2PKEYMAP		addr[address::KEYMAP2P]
#define ADDR_GAMEDATAMGR	addr[address::GAMEDATAMGR]
#define ADDR_CHAROBJHEADOFS	addr[address::CHAROBJHEADOFS]
#define ADDR_CHAROBJTAILOFS	addr[address::CHAROBJTAILOFS]
#define ADDR_OBJLISTMGR		addr[address::OBJLISTMGR]
#define ADDR_OBJPROJOFS		addr[address::OBJPROJOFS]
#define ADDR_ATTACKAREAOFS	addr[address::ATTACKAREAOFS]
#define ADDR_ATTACKAREA2OFS	addr[address::ATTACKAREA2OFS]
#define ADDR_ATTACKAREACOUNTOFS	addr[address::ATTACKAREACOUNTOFS]
#define ADDR_HITAREACOUNTOFS	addr[address::HITAREACOUNTOFS]
#define ADDR_DIRECTIONOFS	addr[address::DIRECTIONOFS]
#define ADDR_IMAGESTRUCTOFS	addr[address::IMAGESTRUCTOFS]
#define ADDR_IMAGENUMBEROFS	addr[address::IMAGENUMBEROFS]
#define ADDR_HITSTOPOFS		addr[address::HITSTOPOFS]
#define ADDR_AIRDASHCOUNTOFS	addr[address::AIRDASHCOUNTOFS]
#define ADDR_REIPOWEROFS	addr[address::REIPOWEROFS]
#define ADDR_MAXREIPOWEROFS	addr[address::MAXREIPOWEROFS]
#define ADDR_CORRECTIONOFS	addr[address::CORRECTIONOFS]
#define ADDR_COMBORATEOFS	addr[address::COMBORATEOFS]
#define ADDR_COMBOCOUNTOFS	addr[address::COMBOCOUNTOFS]
#define ADDR_COMBODAMAGEOFS	addr[address::COMBODAMAGEOFS]
#define ADDR_COMBOLIMITOFS	addr[address::COMBOLIMITOFS]
#define ADDR_CARDGAUGEOFS	addr[address::CARDGAUGEOFS]
#define ADDR_CARDCOUNTOFS	addr[address::CARDCOUNTOFS]
#define ADDR_CARDCOUNT2OFS	addr[address::CARDCOUNT2OFS]
#define ADDR_HANDCARDBASEOFS	addr[address::HANDCARDBASEOFS]
#define ADDR_SELECTCARDOFS	addr[address::SELECTCARDOFS]
#define ADDR_HANDCARDMAXOFS	addr[address::HANDCARDMAXOFS]
#define ADDR_SKILLLEVELMAPOFS	addr[address::SKILLLEVELMAPOFS]
#define ADDR_MOTIONSTRUCTOFS	addr[address::MOTIONSTRUCTOFS]
#define ADDR_HITAREAOFS		addr[address::HITAREAOFS]
#define ADDR_LPROFNAME		addr[address::LPROFNAME]
#define ADDR_RPROFNAME		addr[address::RPROFNAME]
#define ADDR_ATTACKPOWEROFS	addr[address::ATTACKPOWEROFS]
#define ADDR_DEFENSEPOWEROFS	addr[address::DEFENSEPOWEROFS]
#define ADDR_DEFENSEDOLLOFS	addr[address::DEFENSEDOLLOFS]
#define ADDR_ATTACKSTICKOFS	addr[address::ATTACKSTICKOFS]
#define ADDR_KOKUSHIOFS		addr[address::KOKUSHIOFS]
#define ADDR_UTHIWAOFS		addr[address::UTHIWAOFS]
#define ADDR_SPEEDPOWEROFS	addr[address::SPEEDPOWEROFS]
#define ADDR_GRIMOREOFS		addr[address::GRIMOREOFS]
#define ADDR_DROPWATEROFS	addr[address::DROPWATEROFS]
#define ADDR_DROPWATERTIMEOFS	addr[address::DROPWATERTIMEOFS]
#define ADDR_RYUUSEIOFS		addr[address::RYUUSEIOFS]
#define ADDR_TIMESTOPOFS	addr[address::TIMESTOPOFS]
#define ADDR_KANAKOOFS		addr[address::KANAKOOFS]
#define ADDR_SUWAKOOFS		addr[address::SUWAKOOFS]
#define ADDR_STAGENUMBER	addr[address::STAGENUMBER]
#define ADDR_STAGENUMBER2	addr[address::STAGENUMBER2]
#define ADDR_BGMNUMBER		addr[address::BGMNUMBER]
#define ADDR_SAKUYAWORLDOFS	addr[address::SAKUYAWORLDOFS]
#define ADDR_PRIVATESQOFS	addr[address::PRIVATESQOFS]
#define ADDR_TENSEITIMEOFS	addr[address::TENSEITIMEOFS]
#define ADDR_TENSEINUMOFS	addr[address::TENSEINUMOFS]
#define ADDR_TENSEIONOFS	addr[address::TENSEIONOFS]
#define ADDR_LIFERECOVERYOFS	addr[address::LIFERECOVERYOFS]
#define ADDR_TEKETENOFS		addr[address::TEKETENOFS]
#define ADDR_ORRERYOFS		addr[address::ORRERYOFS]
#define ADDR_PHILOSOPHEROFS	addr[address::PHILOSOPHEROFS]
#define ADDR_MUNENOFS		addr[address::MUNENOFS]
#define ADDR_HIHISOUOFS		addr[address::HIHISOUOFS]
#define ADDR_FIELDREDOFS	addr[address::FIELDREDOFS]
#define ADDR_FIELDPURPLEOFS	addr[address::FIELDPURPLEOFS]
#define ADDR_MPPOFS		addr[address::MPPOFS]
#define ADDR_FIELDRED2OFS	addr[address::FIELDRED2OFS]
#define ADDR_HITAREAFLAGOFS	addr[address::HITAREAFLAGOFS]
#define ADDR_HITAREA2OFS	addr[address::HITAREA2OFS]
#define ADDR_FRAMEFLAGSOFS	addr[address::FRAMEFLAGSOFS]
#define ADDR_ATTACKFLAGSOFS	addr[address::ATTACKFLAGSOFS]
#define	ADDR_DIAHARDOFS		addr[address::DIAHARDOFS]
#define ADDR_REISTOPROFS	addr[address::REISTOPROFS]
#define ADDR_KEYMGROFS		addr[address::KEYMGROFS]
#define ADDR_KEYMAPOFS		addr[address::KEYMAPOFS]
#define ADDR_ACTIONBLOCKIDOFS	addr[address::ACTIONBLOCKIDOFS]

class address{
public:
	enum{
		PBATTLEMGR=0,	PNETOBJECT,	COMMMODE,
		LCHARID,	RCHARID,	SCENEID,
		LCHAROFS,	RCHAROFS,	BTLMODEOFS,
		LPROFOFS,	RPROFOFS,	NETUDPOFS,
		ADRBEGOFS,	TOADDROFS,	WINCNTOFS,

		POINTXOFS,	POINTYOFS,	HPOFS,
		TIMECOUNT,	SPEEDXOFS,	SPEEDYOFS,
		ACTIONIDOFS,	FRAMECOUNTOFS,	WEATHER,
		DISPLAYWEATHER,	WEATHERCOUNTER,	ACTIVEFLAG,
		KEYMAP1P,	KEYMAP2P,	GAMEDATAMGR,
		CHAROBJHEADOFS,	CHAROBJTAILOFS,	OBJLISTMGR,
		OBJPROJOFS,	ATTACKAREAOFS,	ATTACKAREA2OFS,
		ATTACKAREACOUNTOFS,HITAREACOUNTOFS,DIRECTIONOFS,
		IMAGESTRUCTOFS,	IMAGENUMBEROFS,	HITSTOPOFS,
		AIRDASHCOUNTOFS,REIPOWEROFS,	MAXREIPOWEROFS,
		CORRECTIONOFS,	COMBORATEOFS,	COMBOCOUNTOFS,
		COMBODAMAGEOFS,	COMBOLIMITOFS,	CARDGAUGEOFS,
		CARDCOUNTOFS,	CARDCOUNT2OFS,	HANDCARDBASEOFS,
		SELECTCARDOFS,	HANDCARDMAXOFS,	SKILLLEVELMAPOFS,
		MOTIONSTRUCTOFS,HITAREAOFS,	LPROFNAME,
		RPROFNAME,	ATTACKPOWEROFS,	DEFENSEPOWEROFS,
		DEFENSEDOLLOFS,	ATTACKSTICKOFS,	KOKUSHIOFS,
		UTHIWAOFS,	SPEEDPOWEROFS,	GRIMOREOFS,
		DROPWATEROFS,	DROPWATERTIMEOFS,RYUUSEIOFS,
		TIMESTOPOFS,	KANAKOOFS,	SUWAKOOFS,
		STAGENUMBER,	STAGENUMBER2,	BGMNUMBER,
		SAKUYAWORLDOFS,	PRIVATESQOFS,	TENSEITIMEOFS,
		TENSEINUMOFS,	TENSEIONOFS,	LIFERECOVERYOFS,
		TEKETENOFS,	ORRERYOFS,	PHILOSOPHEROFS,
		MUNENOFS,	HIHISOUOFS,	FIELDREDOFS,
		FIELDPURPLEOFS,	MPPOFS,		FIELDRED2OFS,
		HITAREAFLAGOFS,	HITAREA2OFS,	FRAMEFLAGSOFS,
		ATTACKFLAGSOFS,	DIAHARDOFS,	REISTOPROFS,
		KEYMGROFS,	KEYMAPOFS,	ACTIONBLOCKIDOFS,
		ADDR_MAX
	};
	char *name_list[ADDR_MAX];
	int list[ADDR_MAX];

	void init(){
		char *temp[ADDR_MAX] = {
			"ADDR_PBATTLEMGR",	"ADDR_PNETOBJECT",	"ADDR_COMMMODE",
			"ADDR_LCHARID",		"ADDR_RCHARID",		"ADDR_SCENEID",
			"ADDR_LCHAROFS",	"ADDR_RCHAROFS",	"ADDR_BTLMODEOFS",
			"ADDR_LPROFOFS",	"ADDR_RPROFOFS",	"ADDR_NETUDPOFS",
			"ADDR_ADRBEGOFS",	"ADDR_TOADDROFS",	"ADDR_WINCNTOFS",

			"ADDR_POINTXOFS",	"ADDR_POINTYOFS",	"ADDR_HPOFS",
			"ADDR_TIMECOUNT",	"ADDR_SPEEDXOFS",	"ADDR_SPEEDYOFS",
			"ADDR_ACTIONIDOFS",	"ADDR_FRAMECOUNTOFS",	"ADDR_WEATHER",
			"ADDR_DISPLAYWEATHER",	"ADDR_WEATHERCOUNTER",	"ADDR_ACTIVEFLAG",
			"ADDR_1PKEYMAP",	"ADDR_2PKEYMAP",	"ADDR_GAMEDATAMGR",
			"ADDR_CHAROBJHEADOFS",	"ADDR_CHAROBJTAILOFS",	"ADDR_OBJLISTMGR",
			"ADDR_OBJPROJOFS",	"ADDR_ATTACKAREAOFS",	"ADDR_ATTACKAREA2OFS",
			"ADDR_ATTACKAREACOUNTOFS","ADDR_HITAREACOUNTOFS","ADDR_DIRECTIONOFS",
			"ADDR_IMAGESTRUCTOFS",	"ADDR_IMAGENUMBEROFS",	"ADDR_HITSTOPOFS",
			"ADDR_AIRDASHCOUNTOFS",	"ADDR_REIPOWEROFS",	"ADDR_MAXREIPOWEROFS",
			"ADDR_CORRECTIONOFS",	"ADDR_COMBORATEOFS",	"ADDR_COMBOCOUNTOFS",
			"ADDR_COMBODAMAGEOFS",	"ADDR_COMBOLIMITOFS",	"ADDR_CARDGAUGEOFS",
			"ADDR_CARDCOUNTOFS",	"ADDR_CARDCOUNT2OFS",	"ADDR_HANDCARDBASEOFS",
			"ADDR_SELECTCARDOFS",	"ADDR_HANDCARDMAXOFS",	"ADDR_SKILLLEVELMAPOFS",
			"ADDR_MOTIONSTRUCTOFS",	"ADDR_HITAREAOFS",	"ADDR_LPROFNAME",
			"ADDR_PROFNAME",	"ADDR_ATTACKPOWEROFS",	"ADDR_DEFENSEPOWEROFS",
			"ADDR_DEFENSEDOLLOFS",	"ADDR_ATTACKSTICKOFS",	"ADDR_KOKUSHIOFS",
			"ADDR_UTHIWAOFS",	"ADDR_SPEEDPOWEROFS",	"ADDR_GRIMOREOFS",
			"ADDR_DROPWATEROFS",	"ADDR_DROPWATERTIMEOFS","ADDR_RYUUSEIOFS",
			"ADDR_TIMESTOPOFS",	"ADDR_KANAKOOFS",	"ADDR_SUWAKOOFS",
			"ADDR_STAGENUMBER",	"ADDR_STAGENUMBER2",	"ADDR_BGMNUMBER",
			"ADDR_SAKUYAWORLDOFS",	"ADDR_PRIVATESQOFS",	"ADDR_TENSEITIMEOFS",
			"ADDR_TENSEINUMOFS",	"ADDR_TENSEIONOFS",	"ADDR_LIFERECOVERYOFS",
			"ADDR_TEKETENOFS",	"ADDR_ORRERYOFS",	"ADDR_PHILOSOPHEROFS",
			"ADDR_MUNENOFS",	"ADDR_HIHISOUOFS",	"ADDR_FIELDREDOFS",
			"ADDR_FIELDPURPLEOFS",	"ADDR_MPPOFS",		"ADDR_FIELDRED2OFS",
			"ADDR_HITAREAFLAGOFS",	"ADDR_HITAREA2OFS",	"ADDR_FRAMEFLAGSOFS",
			"ADDR_ATTACKFLAGSOFS",	"ADDR_DIAHARDOFS",	"ADDR_REISTOPROFS",
			"ADDR_KEYMGROFS",	"ADDR_KEYMAPOFS",	"ADDR_ACTIONBLOCKIDOFS"
		};
		memcpy(name_list,temp,sizeof(temp));
		reset();
		//		ñºèÃ		îÍëzìV		îÒëzìVë•
		//84BDE0	ñAïPÇÃç≈ëÂHP
		set_default(WEATHER,		0x006E4E20,	0x008841A0);	//
		set_default(DISPLAYWEATHER,	0x006E4E24,	0x008841A4);	//
		set_default(WEATHERCOUNTER,	0x006E4E2C,	0x008841AC);	//
		set_default(STAGENUMBER,	0x00000000,	0x008841AE);	//
		set_default(TIMECOUNT,		0x006E6238,	0x008855B8);	//
		set_default(GAMEDATAMGR,	0x006E623C,	0x008855BC);	//
		set_default(CHAROBJHEADOFS,	0x3C,		0x40);		//
		set_default(CHAROBJTAILOFS,	0x40,		0x48);		//
		set_default(OBJLISTMGR,		0x658,		0x6F8);		//
		set_default(OBJPROJOFS,		0x54,		0x54);		//
		set_default(PBATTLEMGR,		0x006E6244,	0x008855C4);	//
		set_default(COMMMODE,		0x006E62EC,	0x00885670);	//
		set_default(PNETOBJECT,		0x006E62FC,	0x00885680);	//
		set_default(LPROFNAME,		0x006E6578,	0x008604A0);	//ñ¢åüèÿ
		set_default(KEYMAP1P,		0x006E6598,	0x00885920);	//
		set_default(RPROFNAME,		0x006E68B4,	0x00860C8C);	//ñ¢åüèÿ
		set_default(KEYMAP2P,		0x006E6940,	0x0088610C);	//
		set_default(STAGENUMBER2,	0x00000000,	0x00886CEC);	//ñ¢åüèÿ
		set_default(BGMNUMBER,		0x00000000,	0x00886CED);	//
		set_default(LCHARID,		0x006E6FF0,	0x00886CF0);	//
		set_default(RCHARID,		0x006E7010,	0x00886D10);	//
		set_default(SCENEID,		0x006ECE7C,	0x0088D024);	//
		set_default(ACTIVEFLAG,		0x006ED3A8,	0x0088DF68);	//ñ¢åüèÿ
		set_default(LCHAROFS,		0x0c,		0x0c);		//
		set_default(RCHAROFS,		0x10,		0x10);		//
		set_default(BTLMODEOFS,		0x88,		0x88);		//ñ¢åüèÿ
		set_default(LPROFOFS,		0x04,		0x04);		//ñ¢åüèÿ
		set_default(RPROFOFS,		0x24,		0x24);		//ñ¢åüèÿ
		set_default(NETUDPOFS,		0x3B4,		0x3BC);		//ñ¢åüèÿ
		set_default(ADRBEGOFS,		0x4B0,		0x10C);		//ñ¢åüèÿ
		set_default(TOADDROFS,		0x3E0,		0x3C);		//ñ¢åüèÿ
		set_default(POINTXOFS,		0xEC,		0xEC);		//
		set_default(POINTYOFS,		0xF0,		0xF0);		//
		set_default(SPEEDXOFS,		0xF4,		0xF4);		//
		set_default(SPEEDYOFS,		0xF8,		0xF8);		//
		set_default(DIRECTIONOFS,	0x104,		0x104);		//
		//0x11C	â°î{ó¶
		//0x120	ècî{ó¶
		set_default(ACTIONIDOFS,	0x13C,		0x13C);		//
		set_default(ACTIONBLOCKIDOFS,	0x13E,		0x13E);		//ñ¢åüèÿ
		set_default(FRAMECOUNTOFS,	0x144,		0x144);		//
		set_default(IMAGESTRUCTOFS,	0x150,		0x150);		//
		set_default(IMAGENUMBEROFS,	0x0A,		0x0A);		//
		set_default(FRAMEFLAGSOFS,	0x4C,		0x4C);		//ñ¢åüèÿ
		set_default(ATTACKFLAGSOFS,	0x50,		0x50);		//ñ¢åüèÿ
		set_default(MOTIONSTRUCTOFS,	0x158,		0x158);		//
		set_default(HITAREAOFS,		0x5C,		0x5C);		//
		set_default(HPOFS,		0x174,		0x184);		//
		//0x190	çUåÇÉqÉbÉgÉtÉâÉOÅHÅ@Ç±Ç±Ç™0ÇÃéûÇµÇ©çUåÇÇ™ÉqÉbÉgÇµÇ»Ç¢
		//0x194	çUåÇÉqÉbÉgÉtÉâÉOÅHÅ@Ç±Ç±Ç™1ÇÃéûÇµÇ©çUåÇÇ™ÉqÉbÉgÇµÇ»Ç¢
		set_default(HITSTOPOFS,		0x186,		0x196);		//
		set_default(ATTACKAREACOUNTOFS,	0x1AF,		0x1CB);		//
		set_default(HITAREACOUNTOFS,	0x1B0,		0x1CC);		//
		set_default(HITAREA2OFS,	0x1B4,		0x1D0);		//ñ¢åüèÿ
		set_default(ATTACKAREA2OFS,	0x204,		0x220);		//
		set_default(ATTACKAREAOFS,	0x304,		0x320);		//
		set_default(HITAREAFLAGOFS,	0x318,		0x334);		//ñ¢åüèÿ
		set_default(AIRDASHCOUNTOFS,	0x47F,		0x49B);		//
		set_default(REIPOWEROFS,	0x482,		0x49E);		//
		set_default(MAXREIPOWEROFS,	0x484,		0x4A0);		//
		set_default(REISTOPROFS,	0x486,		0x4A2);		//
		set_default(TIMESTOPOFS,	0x000,		0x4A8);		//
		set_default(CORRECTIONOFS,	0x491,		0x4AD);		//
		set_default(COMBORATEOFS,	0x494,		0x4B0);		//
		set_default(COMBOCOUNTOFS,	0x498,		0x4B4);		//
		set_default(COMBODAMAGEOFS,	0x49A,		0x4B6);		//
		set_default(COMBOLIMITOFS,	0x4A2,		0x4B8);		//
		set_default(SPEEDPOWEROFS,	0x000,		0x4D0);		//
		set_default(HIHISOUOFS,		0x4B2,		0x526);		//
		set_default(LIFERECOVERYOFS,	0x4B4,		0x528);		//
		set_default(ATTACKPOWEROFS,	0x000,		0x530);		//
		set_default(DEFENSEPOWEROFS,	0x000,		0x534);		//
		set_default(GRIMOREOFS,		0x000,		0x560);		//
		set_default(WINCNTOFS,		0x4E8,		0x573);		//
		//0x5A0Ç»Ç…Ç©
		//0x5B0ÉfÉbÉLÇÃécÇËÉJÅ[Éhñáêî
		set_default(CARDGAUGEOFS,	0x558,		0x5E4);		//
		set_default(CARDCOUNTOFS,	0x55A,		0x5E6);		//
		//0x5D7ÉJÅ[ÉhÇ…ä÷åWÇ∑ÇÈâΩÇ©ÅAëΩï™éËéDç≈ëÂílÇ∆Ç©ÇªÇÒÇ»ÇÒ
		set_default(HANDCARDBASEOFS,	0x560,		0x5EC);		//
		set_default(HANDCARDMAXOFS,	0x564,		0x5F0);		//
		set_default(SELECTCARDOFS,	0x568,		0x5F4);		//
		set_default(CARDCOUNT2OFS,	0x56C,		0x5F8);		//
		//set_default(SKILLMAPADDROFS,	0x604,		0x694);		//ñ¢åüèÿ	ñ¢égóp)
		set_default(SKILLLEVELMAPOFS,	0x624,		0x6C4);		//
		set_default(KEYMGROFS,		0x000,		0x750);		//
		set_default(KEYMAPOFS,		0x000,		0x38);		//
		//0x7BC(ÉJÅ[ÉhÇ…ä÷åWÇ∑ÇÈâΩÇ©)
		set_default(UTHIWAOFS,		0x000,		0x834);		//
		set_default(DEFENSEDOLLOFS,	0x000,		0x840);		//
		set_default(ATTACKSTICKOFS,	0x000,		0x844);		//
		set_default(RYUUSEIOFS,		0x000,		0x84E);		//
		set_default(DROPWATEROFS,	0x000,		0x850);		//
		set_default(DROPWATERTIMEOFS,	0x000,		0x852);		//
		set_default(SAKUYAWORLDOFS,	0x7A4,		0x890);		//
		set_default(PHILOSOPHEROFS,	0x7A4,		0x890);		//
		set_default(PRIVATESQOFS,	0x7A6,		0x892);		//
		set_default(ORRERYOFS,		0x7A6,		0x892);		//
		set_default(MPPOFS,		0x7A6,		0x892);		//
		set_default(FIELDREDOFS,	0x7AC,		0x898);		//
		set_default(FIELDPURPLEOFS,	0x7AE,		0x89A);		//
		set_default(KANAKOOFS,		0x000,		0x89C);		//
		set_default(SUWAKOOFS,		0x000,		0x8A0);		//
		set_default(DIAHARDOFS,		0x000,		0x8A0);		//
		set_default(KOKUSHIOFS,		0x000,		0x8A0);		//
		set_default(FIELDRED2OFS,	0x000,		0x8B2);		//
		set_default(TENSEITIMEOFS,	0x7C6,		0x8B4);		//
		set_default(TENSEINUMOFS,	0x7C8,		0x8B6);		//
		set_default(TENSEIONOFS,	0x7CA,		0x8B8);		//ñ¢åüèÿ
		set_default(TEKETENOFS,		0x7EA,		0x8D6);		//
		set_default(MUNENOFS,		0x838,		0x924);		//
	}

	int & operator [](int n){
		if(list[n] == 0){
			list[n] = g_ini.GetInt(name_list[n]);
		}
		return list[n];
	}

	void reset(){
		memset(list, 0, sizeof(list));
	}
private:
	void set_default(int n,int swr_addr,int swrs_addr){
		char addr[256],name[256];
		snprintf(name, sizeof(name), "SWR_%s", name_list[n]);
		snprintf(addr, sizeof(addr), "0x%x", swr_addr);
		g_ini.Add("default", name, addr);
		snprintf(name, sizeof(name), "SWRS_%s", name_list[n]);
		snprintf(addr, sizeof(addr), "0x%x", swrs_addr);
		g_ini.Add("default", name, addr);
	}
};

extern address addr;
